import 'package:flutter/material.dart';
import 'dart:async' show Future;
import 'package:flutter/services.dart' show rootBundle;
void main() {

  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  MyApp({Key key}):super(key : key){
    var str = loadAsset();
    print("加载配置：${str}");
  }
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'TabBar',
      theme: ThemeData(
        // This is the theme of your application.
        //
        // Try running your application with "flutter run". You'll see the
        // application has a blue toolbar. Then, without quitting the app, try
        // changing the primarySwatch below to Colors.green and then invoke
        // "hot reload" (press "r" in the console where you ran "flutter run",
        // or simply save your changes to "hot reload" in a Flutter IDE).
        // Notice that the counter didn't reset back to zero; the application
        // is not restarted.
        primarySwatch: Colors.blue,
      ),
      home: DismissibleDemo(),
    );
  }
}

Future<String> loadAsset() async{
  return await rootBundle.loadString("assets/config.json");
}

class DismissibleDemo extends StatelessWidget {
  List<String> items = List<String>.generate(30, (i){return "列表项${i+1}";});
  @override
  Widget build(BuildContext context) {
    // TODO: implement build

    return Scaffold(
      appBar: AppBar(
        title: Text("滑动删除示例"),
      ),
      body: ListView.builder(
          itemCount: items.length,
          itemBuilder: (context,index){
            final item = items[index];
            return Dismissible(
                key: Key(item),
                onDismissed: (direction){
                  print("direction=>$direction");
                  items.removeAt(index);
                  Scaffold.of(context).showSnackBar(SnackBar(content: Text("$item被删除了")));
                },
                child: ListTile(title: Text("$item"),));
          }),
    );
  }
}
