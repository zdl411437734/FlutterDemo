import 'package:flutter/material.dart';
import 'package:english_words/english_words.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    final wordPair = WordPair.random();
    return MaterialApp(
      title: 'Welcome to Flutter',
      theme: ThemeData(
        // This is the theme of your application.
        //
        // Try running your application with "flutter run". You'll see the
        // application has a blue toolbar. Then, without quitting the app, try
        // changing the primarySwatch below to Colors.green and then invoke
        // "hot reload" (press "r" in the console where you ran "flutter run",
        // or simply save your changes to "hot reload" in a Flutter IDE).
        // Notice that the counter didn't reset back to zero; the application
        // is not restarted.
        primarySwatch: Colors.blue,
      ),
      home: Scaffold(

        body: Center(
          child: RandomWords(),
        ),
      ),
    );
  }
}



/**
 * 状态管理
 */
class RandomWordState extends State<RandomWords>{
  final List<WordPair> _suggestions = <WordPair>[];//声明一个数组
  final Set<WordPair> _saved = Set<WordPair>();//保存喜欢的
  final TextStyle _biggerFont = const TextStyle(fontSize: 18.0);//声明一个字体样式
  @override
  Widget build(BuildContext context) {
    // TODO: implement build
    final WordPair wordPair = WordPair.random();
//    return Text(wordPair.asPascalCase);
    return Scaffold(
        appBar: AppBar(
          title: Text("Welcome to Flutter"),
          actions: <Widget>[
            IconButton(
                icon: const Icon(Icons.list),
                onPressed: _pushSaved)
          ],
        ),
        body:_buildSuggestions()
    );
  }
  void _pushSaved(){
    Navigator.of(context).push(MaterialPageRoute(
        builder: (BuildContext context){
          final Iterable<ListTile> tiles=_saved.map((WordPair pair){
            return ListTile(
              title: Text(
                pair.asPascalCase,
                style: _biggerFont,
              ),
            );
          });
          final List<Widget> divided = ListTile.divideTiles(context: context,tiles: tiles).toList();
          return Scaffold(
            appBar: AppBar(
              title: const Text("Saved Suggestions"),
            ),
            body: ListView(children: divided,),
          );
        })
    );
  }
  /**
   * 构建列表
   */
  Widget _buildSuggestions(){
    
    return ListView.builder(
      padding: const EdgeInsets.all(16.0),
      itemBuilder: (BuildContext context, int index){
        //在没列之前添加一个1像素的分割线widget
        print(index);
        if(index.isOdd){
          return Divider();
        }
        final int a = index ~/2;//表示整除2取整
        if(a>=_suggestions.length){
          print('a=>$a,array=>$_suggestions.length');
          _suggestions.addAll(generateWordPairs().take(10));//取10个放到数组中
        }
        return _buildRow(_suggestions[a]);
      }
    );
  }

  Widget _buildRow(WordPair suggestion) {
    final bool alreadSaved = _saved.contains(suggestion);
    return ListTile(
      title: Text(suggestion.asPascalCase,style: _biggerFont,),
      trailing: Icon(alreadSaved?Icons.favorite:Icons.favorite_border,color: alreadSaved?Colors.red:null,),
      onTap: (){
        setState(() {
          if(alreadSaved){
            _saved.remove(suggestion);
          }else{
            _saved.add(suggestion);
          }
        });
      },
    );
  }


}

/**
 * 控件管理
 */
class RandomWords extends StatefulWidget{
  @override
  State<StatefulWidget> createState() {
    // TODO: implement createState
    return RandomWordState();
  }

}